diff -Naru /tmp/nova/conf/libvirt.py /usr/lib/python2.7/site-packages/nova/conf/libvirt.py
--- /tmp/nova/conf/libvirt.py	2017-02-07 12:52:53.000000000 +0000
+++ /usr/lib/python2.7/site-packages/nova/conf/libvirt.py	2017-04-06 20:30:54.028510114 +0000
@@ -470,6 +470,10 @@
     None

 """),
+    cfg.BoolOpt('use_huge_pages',
+                default=False,
+                help='Use hugepages for backing the guest memory'
+                     'by the host.')
 ]

 libvirt_imagebackend_opts = [
diff -Naru /tmp/nova/virt/libvirt/driver.py /usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py
--- /tmp/nova/virt/libvirt/driver.py	2017-02-07 12:52:53.000000000 +0000
+++ /usr/lib/python2.7/site-packages/nova/virt/libvirt/driver.py	2017-04-06 20:31:29.081509775 +0000
@@ -4445,6 +4445,11 @@
         guest.uuid = instance.uuid
         # We are using default unit for memory: KiB
         guest.memory = flavor.memory_mb * units.Ki
+
+        if CONF.libvirt.use_huge_pages:
+            guest.membacking = vconfig.LibvirtConfigGuestMemoryBacking()
+            guest.membacking.hugepages = True
+
         guest.vcpus = flavor.vcpus
         allowed_cpus = hardware.get_vcpu_pin_set()
         pci_devs = pci_manager.get_instance_pci_devs(instance, 'all')
diff -Naru /tmp/nova/virt/libvirt/vif.py /usr/lib/python2.7/site-packages/nova/virt/libvirt/vif.py
--- /tmp/nova/virt/libvirt/vif.py	2017-02-07 12:52:53.000000000 +0000
+++ /usr/lib/python2.7/site-packages/nova/virt/libvirt/vif.py	2017-04-06 20:41:11.801504146 +0000
@@ -21,10 +21,12 @@
 import copy

 import os
+import os.path as path
 import os_vif
 from os_vif import exception as osv_exception
 from oslo_concurrency import processutils
 from oslo_log import log as logging
+from oslo_config import cfg

 import nova.conf
 from nova import exception
@@ -43,6 +45,16 @@

 CONF = nova.conf.CONF

+contrail_vif_opts = [
+    cfg.BoolOpt('use_userspace_vhost',
+                default=False,
+                help='Use qemu userspace-vhost for backing guest interfaces'),
+    cfg.StrOpt('userspace_vhost_socket_dir',
+               default='/var/run/vrouter',
+               help='Directory for userspace vhost sockets'),
+]
+CONF.register_opts(contrail_vif_opts, 'contrail')
+
 # vhostuser queues support
 MIN_LIBVIRT_VHOSTUSER_MQ = (1, 2, 17)

@@ -421,7 +433,14 @@
         conf = self.get_base_config(instance, vif['address'], image_meta,
                                     inst_type, virt_type)
         dev = self.get_vif_devname(vif)
-        designer.set_vif_host_backend_ethernet_config(conf, dev)
+
+        if CONF.contrail.use_userspace_vhost:
+            dev = path.join(CONF.contrail.userspace_vhost_socket_dir,
+                            'uvh_vif_' + dev)
+            designer.set_vif_host_backend_vhostuser_config(conf, 'client', dev)
+        else:
+            designer.set_vif_host_backend_ethernet_config(conf, dev)
+

         designer.set_vif_bandwidth_config(conf, inst_type)
         return conf
@@ -758,7 +777,8 @@
                     instance.display_name, vif['address'],
                     vif['devname'], ptype, -1, -1))
         try:
-            linux_net.create_tap_dev(dev)
+            if not CONF.contrail.use_userspace_vhost:
+                linux_net.create_tap_dev(dev)
             utils.execute('vrouter-port-control', cmd_args, run_as_root=True)
         except processutils.ProcessExecutionError:
             LOG.exception(_LE("Failed while plugging vif"), instance=instance)
@@ -983,7 +1003,8 @@
         cmd_args = ("--oper=delete --uuid=%s" % (vif['id']))
         try:
             utils.execute('vrouter-port-control', cmd_args, run_as_root=True)
-            linux_net.delete_net_dev(dev)
+            if not CONF.contrail.use_userspace_vhost:
+                linux_net.delete_net_dev(dev)
         except processutils.ProcessExecutionError:
             LOG.exception(
                 _LE("Failed while unplugging vif"), instance=instance)
